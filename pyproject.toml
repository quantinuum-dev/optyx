[build-system]
requires = ["setuptools>=42.0", "wheel", "setuptools_scm[toml]>=3.4"]

[project]
dynamic = ["version"]
name = "optyx"
description = "optyx"
readme = "README.md"
requires-python = ">=3.9"
keywords = [
    "quantum computing",
    "string diagrams"
]
authors = [
  {name = "Giovanni de Felice"},
  {email = "giovanni.defelice@cambridgequantum.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering"
]
dependencies = [
  "discopy >= 1.1.6",
  "sympy",
  "perceval-quandela >= 0.10.2",
  "networkx >= 3.2",
  "graphix >= 0.2.11",
]

[project.optional-dependencies]
test = [
    "black",
    "coverage",
    "pyproject-flake8",
    "pylint",
    "pytest",
    "pyzx",
]
docs = [
    "sphinx",
    "myst-parser",
    "nbsphinx",
    "ipykernel",
    "IPython",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://cqcl.github.io/optyx/"
Documentation = "https://cqcl.github.io/optyx/"
Repository = "https://github.com/CQCL/optyx"
Issue-Tracker = "https://github.com/CQCL/optyx/issues"
Download = "https://pypi.org/project/optyx"

[tool.setuptools]
packages = [
    "optyx",
]

[tool.setuptools_scm]
write_to = "optyx/_version.py"

[tool.flake8]
extend-ignore = [
    "E731",
    "E741",
    "E743",
    "F811",
]
per-file-ignores = [
    "__init__.py:F401"
]

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = [
    "optyx",
    "test/*.py",
    "test/*/*.py",
]
addopts = "--doctest-modules"

# Suppress deprecation warnings from third party packages cluttering test output
filterwarnings = [
	"ignore::DeprecationWarning:perceval",
	"ignore::DeprecationWarning:latexcodec",
	"ignore::DeprecationWarning:pkg_resources",
	"ignore::UserWarning:cotengra",
]

[tool.coverage.run]
omit = [
    "optyx/_version.py",
    "optyx/__init__.py",
    "optyx/*/__init__.py",
    "test/*",
]
[tool.coverage.report]
exclude_also = [
    "raise AssertionError",
    "raise NotImplementedError",
    "raise ValueError",
]

[tool.black]
target-version = ["py38", "py39", "py310", "py311"]
line-length = 79

[tool.pylint.'MESSAGES CONTROL']
disable = """
too-many-ancestors,
too-many-arguments
"""
ignore-patterns = "_version.py"
